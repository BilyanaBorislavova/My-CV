{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\My-CV\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\My-CV\\\\src\\\\page-content-wrapper.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useGlobalState } from './global-state-provider';\nimport LoadingIndicator from './components/loading-indicators/loading-indicator';\nconst isLoadingClassName = 'is-loading-page';\nconst cvContentWrapperClassName = 'cv-content-wrapper';\n\nconst PageContentWrapper = () => {\n  const _useGlobalState = useGlobalState(),\n        isPageLoading = _useGlobalState.isPageLoading,\n        setHasPageLoaded = _useGlobalState.setHasPageLoaded;\n\n  const _useState = useState(isLoadingClassName),\n        _useState2 = _slicedToArray(_useState, 2),\n        pageContentWrapperClassName = _useState2[0],\n        setPageContentWrapperClassName = _useState2[1];\n\n  useEffect(() => {\n    setTimeout(() => {\n      setHasPageLoaded();\n    }, 5000);\n  }, []);\n  useEffect(() => {\n    if (!isPageLoading) {\n      setPageContentWrapperClassName(cvContentWrapperClassName);\n    }\n  }, [isPageLoading]);\n  return React.createElement(\"body\", {\n    className: pageContentWrapperClassName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(LoadingIndicator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n};\n\nexport default PageContentWrapper;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\My-CV\\src\\page-content-wrapper.jsx"],"names":["React","useState","useEffect","useGlobalState","LoadingIndicator","isLoadingClassName","cvContentWrapperClassName","PageContentWrapper","isPageLoading","setHasPageLoaded","pageContentWrapperClassName","setPageContentWrapperClassName","setTimeout"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,OAAOC,gBAAP,MAA6B,mDAA7B;AAEA,MAAMC,kBAAkB,GAAG,iBAA3B;AACA,MAAMC,yBAAyB,GAAG,oBAAlC;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAAA,0BACeJ,cAAc,EAD7B;AAAA,QACrBK,aADqB,mBACrBA,aADqB;AAAA,QACNC,gBADM,mBACNA,gBADM;;AAAA,oBAE2CR,QAAQ,CAACI,kBAAD,CAFnD;AAAA;AAAA,QAErBK,2BAFqB;AAAA,QAEQC,8BAFR;;AAI7BT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,UAAU,CAAC,MAAM;AACfH,MAAAA,gBAAgB;AACjB,KAFS,EAEP,IAFO,CAAV;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,aAAL,EAAoB;AAClBG,MAAAA,8BAA8B,CAACL,yBAAD,CAA9B;AACD;AACF,GAJQ,EAIN,CAAEE,aAAF,CAJM,CAAT;AAMA,SACI;AAAM,IAAA,SAAS,EAAEE,2BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CArBD;;AAuBA,eAAeH,kBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useGlobalState } from './global-state-provider';\r\nimport LoadingIndicator from './components/loading-indicators/loading-indicator';\r\n\r\nconst isLoadingClassName = 'is-loading-page';\r\nconst cvContentWrapperClassName = 'cv-content-wrapper';\r\n\r\nconst PageContentWrapper = () => {\r\n    const { isPageLoading, setHasPageLoaded } = useGlobalState();\r\n    const [ pageContentWrapperClassName, setPageContentWrapperClassName ] = useState(isLoadingClassName);\r\n  \r\n    useEffect(() => {\r\n      setTimeout(() => {\r\n        setHasPageLoaded();\r\n      }, 5000);\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      if (!isPageLoading) {\r\n        setPageContentWrapperClassName(cvContentWrapperClassName);\r\n      }\r\n    }, [ isPageLoading ]);\r\n    \r\n    return (\r\n        <body className={pageContentWrapperClassName}>\r\n            <LoadingIndicator />\r\n        </body>\r\n    )\r\n};\r\n\r\nexport default PageContentWrapper;\r\n"]},"metadata":{},"sourceType":"module"}