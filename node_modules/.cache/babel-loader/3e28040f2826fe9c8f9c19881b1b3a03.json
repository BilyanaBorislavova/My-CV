{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\My-CV\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\My-CV\\\\src\\\\components\\\\animated\\\\animated-progress-bar.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'rc-progress';\n\nconst AnimatedProgressBar = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        percent = _useState2[0],\n        setPercent = _useState2[1];\n\n  const increasePercent = () => {\n    const updatedPercent = percent + 1;\n    const timeout = setTimeout(() => setPercent(updatedPercent), 3000);\n\n    if (updatedPercent > 100) {\n      return clearTimeout(timeout);\n    }\n  };\n\n  useEffect(() => {\n    increasePercent();\n  }, []);\n  return React.createElement(Line, {\n    strokeWidth: \"4\",\n    percent: percent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n};\n\nexport default AnimatedProgressBar;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\My-CV\\src\\components\\animated\\animated-progress-bar.jsx"],"names":["React","useEffect","useState","Line","AnimatedProgressBar","percent","setPercent","increasePercent","updatedPercent","timeout","setTimeout","clearTimeout"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,aAArB;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA,oBACEF,QAAQ,CAAC,CAAD,CADV;AAAA;AAAA,QACtBG,OADsB;AAAA,QACbC,UADa;;AAG9B,QAAMC,eAAe,GAAG,MAAM;AAC1B,UAAMC,cAAc,GAAGH,OAAO,GAAG,CAAjC;AAEA,UAAMI,OAAO,GAAGC,UAAU,CACtB,MAAMJ,UAAU,CAACE,cAAD,CADM,EAEtB,IAFsB,CAA1B;;AAKA,QAAIA,cAAc,GAAG,GAArB,EAA0B;AACtB,aAAOG,YAAY,CAACF,OAAD,CAAnB;AACH;AACJ,GAXD;;AAaAR,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,eAAe;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIA,SACI,oBAAC,IAAD;AAAM,IAAA,WAAW,EAAC,GAAlB;AAAsB,IAAA,OAAO,EAAEF,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAvBD;;AAyBA,eAAeD,mBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'rc-progress';\r\n\r\nconst AnimatedProgressBar = () => {\r\n    const [ percent, setPercent ] = useState(0);\r\n\r\n    const increasePercent = () => {\r\n        const updatedPercent = percent + 1;\r\n\r\n        const timeout = setTimeout(\r\n            () => setPercent(updatedPercent),\r\n            3000,\r\n        );\r\n    \r\n        if (updatedPercent > 100) {\r\n            return clearTimeout(timeout);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        increasePercent();\r\n    }, []);\r\n\r\n    return (\r\n        <Line strokeWidth=\"4\" percent={percent} />\r\n    );\r\n};\r\n\r\nexport default AnimatedProgressBar;\r\n"]},"metadata":{},"sourceType":"module"}