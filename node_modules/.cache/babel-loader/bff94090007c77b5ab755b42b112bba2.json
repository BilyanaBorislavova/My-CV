{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\My-CV\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\My-CV\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\My-CV\\\\src\\\\global-state-provider.jsx\";\nimport React, { useState, useContext, createContext } from 'react';\nconst GlobalStateContext = createContext();\n\nconst useGlobalState = () => useContext(GlobalStateContext);\n\nconst GlobalStateProvider = ({\n  children\n}) => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isPageLoading = _useState2[0],\n        setIsPageLoading = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        shouldDisplayLoadingPage = _useState4[0],\n        setShouldDisplayLoadingPage = _useState4[1];\n\n  const globalState = {\n    isPageLoading,\n    shouldDisplayLoadingPage\n  };\n  const globalStateActions = {\n    setIsPageLoading,\n    setShouldDisplayLoadingPage\n  };\n\n  const globalStateProvider = _objectSpread({}, globalState, globalStateActions);\n\n  return React.createElement(GlobalStateContext.Provider, {\n    value: globalStateProvider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, children);\n};\n\nexport { GlobalStateContext, GlobalStateProvider, useGlobalState };","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\My-CV\\src\\global-state-provider.jsx"],"names":["React","useState","useContext","createContext","GlobalStateContext","useGlobalState","GlobalStateProvider","children","isPageLoading","setIsPageLoading","shouldDisplayLoadingPage","setShouldDisplayLoadingPage","globalState","globalStateActions","globalStateProvider"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,aAAtC,QAA2D,OAA3D;AAEA,MAAMC,kBAAkB,GAAGD,aAAa,EAAxC;;AAEA,MAAME,cAAc,GAAG,MAAMH,UAAU,CAACE,kBAAD,CAAvC;;AAEA,MAAME,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,oBACEN,QAAQ,CAAC,IAAD,CADV;AAAA;AAAA,QAClCO,aADkC;AAAA,QACnBC,gBADmB;;AAAA,qBAEwBR,QAAQ,CAAC,IAAD,CAFhC;AAAA;AAAA,QAElCS,wBAFkC;AAAA,QAERC,2BAFQ;;AAI1C,QAAMC,WAAW,GAAG;AAChBJ,IAAAA,aADgB;AAEhBE,IAAAA;AAFgB,GAApB;AAKA,QAAMG,kBAAkB,GAAG;AACvBJ,IAAAA,gBADuB;AAEvBE,IAAAA;AAFuB,GAA3B;;AAKA,QAAMG,mBAAmB,qBAAQF,WAAR,EAAwBC,kBAAxB,CAAzB;;AAEA,SACI,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEC,mBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,QADL,CADJ;AAKH,CArBD;;AAuBA,SACIH,kBADJ,EAEIE,mBAFJ,EAGID,cAHJ","sourcesContent":["import React, { useState, useContext, createContext } from 'react';\r\n\r\nconst GlobalStateContext = createContext();\r\n\r\nconst useGlobalState = () => useContext(GlobalStateContext);\r\n\r\nconst GlobalStateProvider = ({ children }) => {\r\n    const [ isPageLoading, setIsPageLoading ] = useState(true);\r\n    const [ shouldDisplayLoadingPage, setShouldDisplayLoadingPage ] = useState(true);\r\n\r\n    const globalState = {\r\n        isPageLoading,\r\n        shouldDisplayLoadingPage,\r\n    };\r\n\r\n    const globalStateActions = {\r\n        setIsPageLoading,\r\n        setShouldDisplayLoadingPage,\r\n    };\r\n\r\n    const globalStateProvider = { ...globalState, ...globalStateActions };\r\n\r\n    return (\r\n        <GlobalStateContext.Provider value={globalStateProvider}>\r\n            {children}\r\n        </GlobalStateContext.Provider>\r\n    )\r\n};\r\n\r\nexport {\r\n    GlobalStateContext,\r\n    GlobalStateProvider,\r\n    useGlobalState,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}