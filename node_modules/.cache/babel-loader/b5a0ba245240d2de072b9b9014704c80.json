{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\My-CV\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\My-CV\\\\src\\\\components\\\\design-2020\\\\loading-indicators\\\\loading-indicator.jsx\";\nimport React, { useState, useEffect } from 'react';\n\nconst LoadingIndicator = () => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setIsLoading = _useState2[1];\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, []);\n  return React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, isLoading ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"sdasdsa\") : React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"nananna\"));\n};\n\nexport default LoadingIndicator;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\My-CV\\src\\components\\design-2020\\loading-indicators\\loading-indicator.jsx"],"names":["React","useState","useEffect","LoadingIndicator","isLoading","setIsLoading"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA,oBACSF,QAAQ,CAAC,IAAD,CADjB;AAAA;AAAA,QACnBG,SADmB;AAAA,QACRC,YADQ;;AAG3BH,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,SAAS,GACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADG,GAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJd,CADJ;AASH,CAhBD;;AAkBA,eAAeD,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst LoadingIndicator = () => {\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    return (\r\n        <section>\r\n            {\r\n                isLoading\r\n                    ? <h1>sdasdsa</h1>\r\n                    : <h2>nananna</h2>\r\n            }\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default LoadingIndicator;\r\n"]},"metadata":{},"sourceType":"module"}